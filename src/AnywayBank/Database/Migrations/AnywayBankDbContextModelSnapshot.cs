// <auto-generated />
using System;
using Database.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(AnywayBankDbContext))]
    partial class AnywayBankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Entities.Core.Bank.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid?>("BankProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<decimal>("OverdraftLimit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankProfileId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("Database.Entities.Core.Bank.BankProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasFilter("[PersonId] IS NOT NULL");

                    b.ToTable("BankProfiles");
                });

            modelBuilder.Entity("Database.Entities.Core.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Database.Entities.Core.Bank.BankAccount", b =>
                {
                    b.HasOne("Database.Entities.Core.Bank.BankProfile", "BankProfile")
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankProfileId");

                    b.Navigation("BankProfile");
                });

            modelBuilder.Entity("Database.Entities.Core.Bank.BankProfile", b =>
                {
                    b.HasOne("Database.Entities.Core.Person", "Person")
                        .WithOne("BankProfile")
                        .HasForeignKey("Database.Entities.Core.Bank.BankProfile", "PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Database.Entities.Core.Bank.BankProfile", b =>
                {
                    b.Navigation("BankAccounts");
                });

            modelBuilder.Entity("Database.Entities.Core.Person", b =>
                {
                    b.Navigation("BankProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
